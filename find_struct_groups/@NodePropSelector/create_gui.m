function create_gui(obj, np_functions)

%
% Copyright (C) 2011  Takashi Nishikawa
% 
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or (at
% your option) any later version.
% 
% This program is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
% General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
% USA. 

obj.h_fig = figure(...
   'name', 'Node Property Selector', ...
   'menu', 'none', 'numbertitle', 'off');

n = length(np_functions);

for i = 1:n
   h_panel = uipanel(obj.h_fig, ...
       'position', [0, 1-i/(n+1), 1, 1/(n+1)], ...
       'borderwidth', 1);
   obj.checkbox(i) = uicontrol(h_panel, ...
       'style', 'checkbox', ...
       'string', np_functions(i).name, ...
       'FontWeight', 'bold', ...
       'units', 'normalized', ...
       'value', np_functions(i).compute, ...
       'position', [0.02, 0.25, 0.35, 0.5]);

   h_panel2 = uipanel(h_panel, ...
       'borderwidth', 0, ...
       'position', [0.4, 0.05, 0.3, 0.9]);
   h = uicontrol(h_panel2, ...
       'style', 'text', ...
       'string', 'max. neighbor level = ', ...
       'horizontalalignment', 'right', ...
       'units', 'normalized', ...
       'position', [0, 0, 0.8, 1]);
   adjust_height(h)
   obj.neighbor_level_selector(i) = uicontrol(h_panel2, ...
       'style', 'edit', ...
       'string', num2str(np_functions(i).max_nbr_level), ...
       'units', 'normalized', ...
       'position', [0.8, 0.1, 0.2, 0.8]);

   h_panel3 = uipanel(h_panel, ...
       'borderwidth', 0, ...
       'position', [0.7, 0.05, 0.3, 0.9]);
   h = uicontrol(h_panel3, ...
       'style', 'text', ...
       'string', 'outputs / level = ', ...
       'horizontalalignment', 'right', ...
       'units', 'normalized', ...
       'position', [0, 0, 0.8, 1]);
   adjust_height(h)
   obj.output_selector(i) = uicontrol(h_panel3, ...
       'style', 'edit', ...
       'string', np_functions(i).num_outputs, ...
       'units', 'normalized', ...
       'position', [0.8, 0.1, 0.2, 0.8]);

   apply_button = uicontrol(obj.h_fig,...
       'style', 'pushbutton',...
       'string', 'Apply', ...
       'position', [20,10,60,30], ...
       'callback', @(src,event)apply_settings(obj,src,event));
   
   h_ok_button = uicontrol(obj.h_fig,...
       'style', 'pushbutton',...
       'string', 'Close', ...
       'position', [20,10,60,30], ...
       'callback', @(src,event)close_button_callback(obj,src,event));
   
   align([apply_button, h_ok_button], 'fixed', 10, 'none')
end

function adjust_height(h)

set(h, 'units', 'character')
pos = get(h, 'position');
pos(4) = 1;
set(h, 'position', pos);
set(h, 'units', 'normalized');
pos = get(h, 'position');
pos(2) = (1-pos(4))/2;
set(h, 'position', pos);
